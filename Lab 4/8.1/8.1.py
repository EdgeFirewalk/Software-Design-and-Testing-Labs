# Программу написал:
# Лубенский Игорь Викторович
# Студент группы ПИН-222
# Задание 8.1

# Тестовые данные взяты из методических указаний и не были изменены для удобства проверки

import sys

# Функция сравнения для сортировки черепах по возрастанию силы
def comp(turtle):
    return turtle[1]

# Кортеж черепах, где каждая черепаха представлена кортежем (вес, сила)
T = ()
# Массив dp, где dp[i] - минимальный вес, который можно получить, используя ровно i черепах
dp = [sys.maxsize] * 5607

def solve():
    global T, dp

    # Сортируем черепах по возрастанию силы
    T = sorted(T, key=comp)

    # Инициализируем dp[0] как 0, так как не используя черепах, мы не можем получить никакого веса
    dp[0] = 0
    # Инициализируем max_nturtles как 0, так как пока что мы не использовали ни одной черепахи
    max_nturtles = 0

    # Перебираем всех черепах
    for i in range(len(T)):
        # Перебираем все возможные количества черепах, которые мы можем использовать для получения текущего веса
        for j in range(max_nturtles, -1, -1):
            # Проверяем, можем ли мы положить текущую черепаху на вершину стопки из j черепах
            # и получить меньший вес, чем dp[j + 1]
            if T[i][1] >= dp[j] + T[i][0] and T[i][0] + dp[j] < dp[j + 1]:
                # Обновляем dp[j + 1] как сумму веса текущей черепахи и dp[j]
                dp[j + 1] = dp[j] + T[i][0]
                # Обновляем max_nturtles как максимум из max_nturtles и j + 1
                max_nturtles = max(max_nturtles, j + 1)

    # Выводим максимальное количество черепах, которое мы можем использовать для получения минимального веса
    print(max_nturtles)

def main():
    global T

    with open('input.txt', 'r') as f:
        # Перебираем все строки файла
        for line in f:
            # Разбиваем текущую строку на две части, соответствующие весу и силе черепахи
            w, s = map(int, line.split())
            # Добавляем новую черепаху в кортеж T
            T = T + ((w, s),)

    solve()

if __name__ == "__main__":
    main()
